unit Livro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, uADStanIntf,
  uADStanOption, uADStanParam, uADStanError, uADDatSManager, uADPhysIntf,
  uADDAptIntf, uADStanAsync, uADDAptManager, Data.DB, uADCompDataSet,
  uADCompClient, Vcl.Grids, Vcl.DBGrids;

type
  TfrmCadLivro = class(TForm)
    editTitulo: TLabeledEdit;
    editAutor: TLabeledEdit;
    editDescricao: TLabeledEdit;
    comboEditora: TComboBox;
    editValor: TLabeledEdit;
    editAno: TLabeledEdit;
    Label1: TLabel;
    btnSalvar: TButton;
    btnExcluir: TButton;
    btnAtualizar: TButton;
    btnCancelar: TButton;
    ADQuery1: TADQuery;
    DataSource1: TDataSource;
    dbGridLivros: TDBGrid;
    editID: TLabeledEdit;
    procedure btnSalvarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
    procedure dbGridLivrosCellClick(Column: TColumn);
    procedure btnExcluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmCadLivro: TfrmCadLivro;

implementation

{$R *.dfm}

//cadastra livro
procedure TfrmCadLivro.btnSalvarClick(Sender: TObject);
begin
if editID.Text <> '' then begin
   ShowMessage('O campo ID deve estar em branco para realizar um novo cadastro!');
   exit;
end;
if editTitulo.Text <> '' then begin
   ADQuery1.Close;
   ADQuery1.SQL.Clear;
   ADQuery1.SQL.Add('INSERT INTO TBLIVRO (TITULO, DESCRICAO, ID_EDITORA, AUTOR, ANO, VALOR, ID_USUARIO) VALUES (:TITULO, :DESCRICAO, :ID_EDITORA, :AUTOR, :ANO, :VALOR, 1)');
   ADQuery1.ParamByName('TITULO').AsString := editTitulo.Text;
   ADQuery1.ParamByName('DESCRICAO').AsString := editDescricao.Text;
   ADQuery1.ParamByName('ID_EDITORA').AsInteger := StrToIntDef(comboEditora.Text, 0);
   ADQuery1.ParamByName('AUTOR').AsString := editAutor.Text;
   ADQuery1.ParamByName('ANO').AsInteger := StrToIntDef(editAno.Text, 0);
   ADQuery1.ParamByName('VALOR').AsCurrency := StrToCurrDef(editAno.Text, 0);
   ADQuery1.ExecSQL;
end;

end;

procedure TfrmCadLivro.dbGridLivrosCellClick(Column: TColumn);
begin
editID.Text := dbGridLivros.DataSource.DataSet.FieldByName('ID').AsString;
editTitulo.Text := dbGridLivros.DataSource.DataSet.FieldByName('TITULO').AsString;
editDescricao.Text := dbGridLivros.DataSource.DataSet.FieldByName('DESCRICAO').AsString;
comboEditora.Text := dbGridLivros.DataSource.DataSet.FieldByName('ID_EDITORA').AsString;
editAutor.Text := dbGridLivros.DataSource.DataSet.FieldByName('AUTOR').AsString;
editAno.Text := dbGridLivros.DataSource.DataSet.FieldByName('ANO').AsString;
editValor.Text := dbGridLivros.DataSource.DataSet.FieldByName('VALOR').AsString;
end;

//carrega os dados da DBgrid após mostrar o formulário
procedure TfrmCadLivro.FormShow(Sender: TObject);
begin
   ADQuery1.Close;
   ADQuery1.SQL.Clear;
   ADQuery1.SQL.Add('SELECT * FROM TBLIVRO');
   ADQuery1.Open;
end;

//atualiza dados
procedure TfrmCadLivro.btnAtualizarClick(Sender: TObject);
begin
   if editID.Text <> '' then begin //verifica id e descrição se estão vazios
      ADQuery1.Close;
      ADQuery1.SQL.Clear;
      ADQuery1.SQL.Add('SELECT ID FROM TBLIVRO WHERE ID = :ID');
      ADQuery1.ParamByName('ID').AsString := editID.Text;
      ADQuery1.Open;
      if not ADQuery1.IsEmpty then begin
         try
            ADQuery1.Close;
            ADQuery1.SQL.Clear;
            ADQuery1.SQL.Add('UPDATE TBLIVRO SET TITULO = :TITULO, DESCRICAO = :DESCRICAO, ID_EDITORA = :EDITORA, AUTOR = :AUTOR, ANO = :ANO, VALOR = :VALOR WHERE ID = :ID');
            ADQuery1.ParamByName('TITULO').AsString := editTitulo.Text;
            ADQuery1.ParamByName('DESCRICAO').AsString := editDescricao.Text;
            ADQuery1.ParamByName('EDITORA').AsInteger := StrToIntDef(comboEditora.Text, 0);
            ADQuery1.ParamByName('AUTOR').AsString := editAutor.Text;
            ADQuery1.ParamByName('ANO').AsInteger := StrToIntDef(editAno.Text, 0);
            ADQuery1.ParamByName('VALOR').AsCurrency := StrToCurrDef(editAno.Text, 0);
            ADQuery1.ParamByName('ID').AsString := editID.Text;
            ADQuery1.ExecSQL;
         finally
            ShowMessage('Atualizado com sucesso!');
         end;
      end;
   end;
end;

//excluir livro
procedure TfrmCadLivro.btnExcluirClick(Sender: TObject);
begin
if editID.Text <> '' then begin //verifica id e descrição se estão vazios
   ADQuery1.Close;
   ADQuery1.SQL.Clear;
   ADQuery1.SQL.Add('SELECT ID FROM TBLIVRO WHERE ID = :ID');
   ADQuery1.ParamByName('ID').AsString := editID.Text;
   ADQuery1.Open;
   if not ADQuery1.IsEmpty then begin
      try
         ADQuery1.Close;
         ADQuery1.SQL.Clear;
         ADQuery1.SQL.Add('DELETE FROM TBLIVRO WHERE ID = :ID');
         ADQuery1.ParamByName('ID').AsString := editID.Text;
         ADQuery1.ExecSQL;
      finally
         editID.Clear;
         editTitulo.Clear;
         ShowMessage('Deletado com sucesso!');
      end;
   end;
end;
end;

end.
